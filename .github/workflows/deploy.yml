name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # Clone and build the main portfolio (multi-theme) for root deployment
    - name: Clone portfolio multi-theme repository
      run: |
        git clone https://github.com/JordiNodeJS/porfolio-multi-theme.git porfolio-multi-theme

    - name: Clean npm cache and fix dependencies (portfolio multi-theme)
      run: |
        cd porfolio-multi-theme
        npm cache clean --force
        rm -rf package-lock.json node_modules
        npm install

    - name: Build portfolio multi-theme for root deployment
      run: |
        cd porfolio-multi-theme
        VITE_BASE_PATH="/" npm run build
        cd ..
        # Use portfolio build as main deployment
        mkdir -p dist
        cp -r porfolio-multi-theme/dist/* dist/

    # Optional: Build current project as backup/legacy (uncomment if needed)
    # - name: Install dependencies (legacy)
    #   run: npm ci
    # 
    # - name: Build legacy project  
    #   run: npm run build
    #
    # - name: Copy legacy build to subdirectory
    #   run: |
    #     mkdir -p dist/legacy
    #     cp -r dist-legacy/* dist/legacy/ || echo "No legacy build found"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 